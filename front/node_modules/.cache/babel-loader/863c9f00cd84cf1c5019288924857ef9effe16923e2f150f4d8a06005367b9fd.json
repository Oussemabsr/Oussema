{"ast":null,"code":"import axios from 'axios';\nimport { ADD_POST, EDIT_POST, DELETE_POST, FETCH_POSTS_SUCCESS, FETCH_POSTS_FAILURE } from '../ActionTypes/add';\n\n// Action to add a new post\nexport const addPost = newPostData => async dispatch => {\n  try {\n    const result = await axios.post('/api/postt/add', newPostData); // Updated URL\n    dispatch({\n      type: ADD_POST,\n      payload: result.data\n    });\n  } catch (error) {\n    console.error('Error adding post:', error);\n  }\n};\n\n// Action to edit a post\nexport const editPost = (postId, updatedPostData) => async dispatch => {\n  try {\n    const result = await axios.put(`/api/posts/${postId}`, updatedPostData);\n    dispatch({\n      type: EDIT_POST,\n      payload: {\n        postId,\n        updatedPostData: result.data\n      }\n    });\n  } catch (error) {\n    console.error('Error editing post:', error);\n  }\n};\n\n// Action to delete a post\nexport const deletePost = postId => async dispatch => {\n  try {\n    await axios.delete(`/api/posts/${postId}`);\n    dispatch({\n      type: DELETE_POST,\n      payload: postId\n    });\n  } catch (error) {\n    console.error('Error deleting post:', error);\n  }\n};\n\n// Action to fetch posts\nexport const fetchPosts = () => async dispatch => {\n  try {\n    const response = await axios.get('/api/postt/all'); // Update the URL to match your API endpoint\n    const posts = response.data.allPosts; // Assuming the API response contains an array of posts\n    dispatch({\n      type: FETCH_POSTS_SUCCESS,\n      payload: posts\n    });\n  } catch (error) {\n    dispatch({\n      type: FETCH_POSTS_FAILURE,\n      payload: error.message\n    });\n  }\n};\n\n// Action to fetch posts by id\nexport const fetchPostsById = postId => async dispatch => {\n  try {\n    const response = await axios.get(`/api/postt/annonceDetail/${postId}`); // Update the URL to match your API endpoint\n    const posts = response.data.allPosts; // Assuming the API response contains an array of posts\n    dispatch({\n      type: FETCH_POSTS_SUCCESS,\n      payload: posts\n    });\n  } catch (error) {\n    dispatch({\n      type: FETCH_POSTS_FAILURE,\n      payload: error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","ADD_POST","EDIT_POST","DELETE_POST","FETCH_POSTS_SUCCESS","FETCH_POSTS_FAILURE","addPost","newPostData","dispatch","result","post","type","payload","data","error","console","editPost","postId","updatedPostData","put","deletePost","delete","fetchPosts","response","get","posts","allPosts","message","fetchPostsById"],"sources":["C:/Users/USER/OneDrive/Bureau/SELL BUY/front/src/JS/Actions/add.js"],"sourcesContent":["import axios from 'axios';\r\nimport { ADD_POST, EDIT_POST, DELETE_POST, FETCH_POSTS_SUCCESS, FETCH_POSTS_FAILURE } from '../ActionTypes/add';\r\n\r\n// Action to add a new post\r\nexport const addPost = (newPostData) => async (dispatch) => {\r\n  try {\r\n    const result = await axios.post('/api/postt/add', newPostData); // Updated URL\r\n    dispatch({ type: ADD_POST, payload: result.data });\r\n  } catch (error) {\r\n    console.error('Error adding post:', error);\r\n  }\r\n};\r\n\r\n\r\n// Action to edit a post\r\nexport const editPost = (postId, updatedPostData) => async (dispatch) => {\r\n  try {\r\n    const result = await axios.put(`/api/posts/${postId}`, updatedPostData);\r\n    dispatch({ type: EDIT_POST, payload: { postId, updatedPostData: result.data } });\r\n  } catch (error) {\r\n    console.error('Error editing post:', error);\r\n  }\r\n};\r\n\r\n// Action to delete a post\r\nexport const deletePost = (postId) => async (dispatch) => {\r\n  try {\r\n    await axios.delete(`/api/posts/${postId}`);\r\n    dispatch({ type: DELETE_POST, payload: postId });\r\n  } catch (error) {\r\n    console.error('Error deleting post:', error);\r\n  }\r\n};\r\n\r\n// Action to fetch posts\r\nexport const fetchPosts = () => async (dispatch) => {\r\n  try {\r\n    const response = await axios.get('/api/postt/all'); // Update the URL to match your API endpoint\r\n    const posts = response.data.allPosts; // Assuming the API response contains an array of posts\r\n    dispatch({ type: FETCH_POSTS_SUCCESS, payload: posts });\r\n  } catch (error) {\r\n    dispatch({ type: FETCH_POSTS_FAILURE, payload: error.message });\r\n  }\r\n};\r\n\r\n// Action to fetch posts by id\r\nexport const fetchPostsById = (postId) => async (dispatch) => {\r\n  try {\r\n    const response = await axios.get(`/api/postt/annonceDetail/${postId}`); // Update the URL to match your API endpoint\r\n    const posts = response.data.allPosts; // Assuming the API response contains an array of posts\r\n    dispatch({ type: FETCH_POSTS_SUCCESS, payload: posts });\r\n  } catch (error) {\r\n    dispatch({ type: FETCH_POSTS_FAILURE, payload: error.message });\r\n  }\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,EAAEC,mBAAmB,EAAEC,mBAAmB,QAAQ,oBAAoB;;AAE/G;AACA,OAAO,MAAMC,OAAO,GAAIC,WAAW,IAAK,MAAOC,QAAQ,IAAK;EAC1D,IAAI;IACF,MAAMC,MAAM,GAAG,MAAMT,KAAK,CAACU,IAAI,CAAC,gBAAgB,EAAEH,WAAW,CAAC,CAAC,CAAC;IAChEC,QAAQ,CAAC;MAAEG,IAAI,EAAEV,QAAQ;MAAEW,OAAO,EAAEH,MAAM,CAACI;IAAK,CAAC,CAAC;EACpD,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;EAC5C;AACF,CAAC;;AAGD;AACA,OAAO,MAAME,QAAQ,GAAGA,CAACC,MAAM,EAAEC,eAAe,KAAK,MAAOV,QAAQ,IAAK;EACvE,IAAI;IACF,MAAMC,MAAM,GAAG,MAAMT,KAAK,CAACmB,GAAG,CAAE,cAAaF,MAAO,EAAC,EAAEC,eAAe,CAAC;IACvEV,QAAQ,CAAC;MAAEG,IAAI,EAAET,SAAS;MAAEU,OAAO,EAAE;QAAEK,MAAM;QAAEC,eAAe,EAAET,MAAM,CAACI;MAAK;IAAE,CAAC,CAAC;EAClF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;EAC7C;AACF,CAAC;;AAED;AACA,OAAO,MAAMM,UAAU,GAAIH,MAAM,IAAK,MAAOT,QAAQ,IAAK;EACxD,IAAI;IACF,MAAMR,KAAK,CAACqB,MAAM,CAAE,cAAaJ,MAAO,EAAC,CAAC;IAC1CT,QAAQ,CAAC;MAAEG,IAAI,EAAER,WAAW;MAAES,OAAO,EAAEK;IAAO,CAAC,CAAC;EAClD,CAAC,CAAC,OAAOH,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;EAC9C;AACF,CAAC;;AAED;AACA,OAAO,MAAMQ,UAAU,GAAGA,CAAA,KAAM,MAAOd,QAAQ,IAAK;EAClD,IAAI;IACF,MAAMe,QAAQ,GAAG,MAAMvB,KAAK,CAACwB,GAAG,CAAC,gBAAgB,CAAC,CAAC,CAAC;IACpD,MAAMC,KAAK,GAAGF,QAAQ,CAACV,IAAI,CAACa,QAAQ,CAAC,CAAC;IACtClB,QAAQ,CAAC;MAAEG,IAAI,EAAEP,mBAAmB;MAAEQ,OAAO,EAAEa;IAAM,CAAC,CAAC;EACzD,CAAC,CAAC,OAAOX,KAAK,EAAE;IACdN,QAAQ,CAAC;MAAEG,IAAI,EAAEN,mBAAmB;MAAEO,OAAO,EAAEE,KAAK,CAACa;IAAQ,CAAC,CAAC;EACjE;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,cAAc,GAAIX,MAAM,IAAK,MAAOT,QAAQ,IAAK;EAC5D,IAAI;IACF,MAAMe,QAAQ,GAAG,MAAMvB,KAAK,CAACwB,GAAG,CAAE,4BAA2BP,MAAO,EAAC,CAAC,CAAC,CAAC;IACxE,MAAMQ,KAAK,GAAGF,QAAQ,CAACV,IAAI,CAACa,QAAQ,CAAC,CAAC;IACtClB,QAAQ,CAAC;MAAEG,IAAI,EAAEP,mBAAmB;MAAEQ,OAAO,EAAEa;IAAM,CAAC,CAAC;EACzD,CAAC,CAAC,OAAOX,KAAK,EAAE;IACdN,QAAQ,CAAC;MAAEG,IAAI,EAAEN,mBAAmB;MAAEO,OAAO,EAAEE,KAAK,CAACa;IAAQ,CAAC,CAAC;EACjE;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}