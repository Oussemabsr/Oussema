{"ast":null,"code":"import _toConsumableArray from\"C:/Users/USER/OneDrive/Bureau/SELL BUY/front/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"C:/Users/USER/OneDrive/Bureau/SELL BUY/front/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{ADD_POST,EDIT_POST,DELETE_POST,FETCH_POSTS_SUCCESS,FETCH_POSTS_FAILURE}from'../ActionTypes/add';var initialState={posts:[],annonceList:[]// Separate state slice for annonces\n};var postReducer=function postReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var _ref=arguments.length>1?arguments[1]:undefined,type=_ref.type,payload=_ref.payload;switch(type){case ADD_POST:return _objectSpread(_objectSpread({},state),{},{posts:[].concat(_toConsumableArray(state.posts),[payload])});case EDIT_POST:// You can implement the logic for editing a post here\nreturn state;case DELETE_POST:// You can implement the logic for deleting a post here\nreturn state;case FETCH_POSTS_SUCCESS:return _objectSpread(_objectSpread({},state),{},{annonceList:payload// Update annonceList with fetched data\n});case FETCH_POSTS_FAILURE:// Handle the failure case if needed\nreturn state;default:return state;}};export default postReducer;","map":{"version":3,"names":["ADD_POST","EDIT_POST","DELETE_POST","FETCH_POSTS_SUCCESS","FETCH_POSTS_FAILURE","initialState","posts","annonceList","postReducer","state","arguments","length","undefined","_ref","type","payload","_objectSpread","concat","_toConsumableArray"],"sources":["C:/Users/USER/OneDrive/Bureau/SELL BUY/front/src/JS/Reducers/post.js"],"sourcesContent":["import {\r\n  ADD_POST,\r\n  EDIT_POST,\r\n  DELETE_POST,\r\n  FETCH_POSTS_SUCCESS,\r\n  FETCH_POSTS_FAILURE,\r\n} from '../ActionTypes/add';\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  annonceList: [], // Separate state slice for annonces\r\n};\r\n\r\nconst postReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case ADD_POST:\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, payload],\r\n      };\r\n    case EDIT_POST:\r\n      // You can implement the logic for editing a post here\r\n      return state;\r\n    case DELETE_POST:\r\n      // You can implement the logic for deleting a post here\r\n      return state;\r\n    case FETCH_POSTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        annonceList: payload, // Update annonceList with fetched data\r\n      };\r\n    case FETCH_POSTS_FAILURE:\r\n      // Handle the failure case if needed\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default postReducer;\r\n\r\n"],"mappings":"2QAAA,OACEA,QAAQ,CACRC,SAAS,CACTC,WAAW,CACXC,mBAAmB,CACnBC,mBAAmB,KACd,oBAAoB,CAE3B,GAAM,CAAAC,YAAY,CAAG,CACnBC,KAAK,CAAE,EAAE,CACTC,WAAW,CAAE,EAAI;AACnB,CAAC,CAED,GAAM,CAAAC,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAA,CAAgD,IAA5C,CAAAC,KAAK,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAGL,YAAY,KAAAQ,IAAA,CAAAH,SAAA,CAAAC,MAAA,GAAAD,SAAA,IAAAE,SAAA,CAAIE,IAAI,CAAAD,IAAA,CAAJC,IAAI,CAAEC,OAAO,CAAAF,IAAA,CAAPE,OAAO,CACxD,OAAQD,IAAI,EACV,IAAK,CAAAd,QAAQ,CACX,OAAAgB,aAAA,CAAAA,aAAA,IACKP,KAAK,MACRH,KAAK,IAAAW,MAAA,CAAAC,kBAAA,CAAMT,KAAK,CAACH,KAAK,GAAES,OAAO,EAAC,GAEpC,IAAK,CAAAd,SAAS,CACZ;AACA,MAAO,CAAAQ,KAAK,CACd,IAAK,CAAAP,WAAW,CACd;AACA,MAAO,CAAAO,KAAK,CACd,IAAK,CAAAN,mBAAmB,CACtB,OAAAa,aAAA,CAAAA,aAAA,IACKP,KAAK,MACRF,WAAW,CAAEQ,OAAS;AAAA,GAE1B,IAAK,CAAAX,mBAAmB,CACtB;AACA,MAAO,CAAAK,KAAK,CACd,QACE,MAAO,CAAAA,KAAK,CAChB,CACF,CAAC,CAED,cAAe,CAAAD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}