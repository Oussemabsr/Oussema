{"ast":null,"code":"import axios from \"axios\";\nimport { CURRENT_USER, FAIL_USER, LOAD_USER, LOGIN_USER, LOGOUT_USER, REGISTER_USER } from \"../ActionTypes/user\";\nexport const register = newUser => async dispatch => {\n  dispatch({\n    type: LOAD_USER\n  });\n  try {\n    let result = await axios.post(\"/api/user/register\", newUser);\n    dispatch({\n      type: REGISTER_USER,\n      payload: result.data\n    });\n  } catch (error) {\n    dispatch({\n      type: FAIL_USER,\n      payload: error.response.data.errors\n    });\n  }\n};\nexport const login = (user, history) => async dispatch => {\n  dispatch({\n    type: LOAD_USER\n  });\n  try {\n    let result = await axios.post('/api/user/login', user);\n    dispatch({\n      type: LOGIN_USER,\n      payload: result.data\n    });\n  } catch (error) {\n    dispatch({\n      type: FAIL_USER,\n      payload: error.response.data.errors\n    });\n  }\n};\nexport const current = () => async dispatch => {\n  dispatch({\n    type: LOAD_USER\n  });\n  try {\n    const config = {\n      headers: {\n        authorization: localStorage.getItem(\"token\")\n      }\n    };\n    let result = await axios.get(\"/api/user/current\", config);\n    dispatch({\n      type: CURRENT_USER,\n      payload: result.data\n    });\n  } catch (error) {\n    dispatch({\n      type: FAIL_USER,\n      payload: error.response.data.errors\n    });\n  }\n};\nexport const logout = () => async dispatch => {\n  dispatch({\n    type: LOGOUT_USER\n  });\n};\n\n// Action to fetch user's posts\nexport const fetchUserPosts = () => async (dispatch, getState) => {\n  const userId = getState().userReducer.user.id; // Get the user's ID from Redux\n  try {\n    const response = await axios.get(`/api/user/posts/${userId}`);\n    const userPosts = response.data.userPosts;\n    dispatch({\n      type: FETCH_USER_POSTS_SUCCE,\n      payload: userPosts\n    });\n  } catch (error) {\n    dispatch({\n      type: FETCH_USER_POSTS_FAILURE,\n      payload: error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","CURRENT_USER","FAIL_USER","LOAD_USER","LOGIN_USER","LOGOUT_USER","REGISTER_USER","register","newUser","dispatch","type","result","post","payload","data","error","response","errors","login","user","history","current","config","headers","authorization","localStorage","getItem","get","logout","fetchUserPosts","getState","userId","userReducer","id","userPosts","FETCH_USER_POSTS_SUCCE","FETCH_USER_POSTS_FAILURE","message"],"sources":["C:/Users/USER/OneDrive/Bureau/SELL BUY/front/src/JS/Actions/user.js"],"sourcesContent":["import axios from \"axios\"\r\nimport { CURRENT_USER, FAIL_USER, LOAD_USER, LOGIN_USER, LOGOUT_USER, REGISTER_USER } from \"../ActionTypes/user\"\r\n\r\n\r\n\r\nexport const register = (newUser) => async (dispatch) => {\r\n    dispatch({type: LOAD_USER})\r\n    try {\r\n        let result = await axios.post(\"/api/user/register\", newUser)\r\n        dispatch({type: REGISTER_USER, payload: result.data})\r\n    } catch (error) {\r\n        dispatch({type: FAIL_USER, payload: error.response.data.errors})\r\n    }\r\n}\r\n\r\nexport const login = (user, history) => async (dispatch) => {\r\n    dispatch({ type: LOAD_USER})\r\n    try {\r\n        let result = await axios.post('/api/user/login', user)\r\n        dispatch({ type: LOGIN_USER, payload: result.data})\r\n    } catch (error) {\r\n        dispatch({type: FAIL_USER, payload: error.response.data.errors})\r\n    }\r\n}\r\n\r\nexport const current = () => async (dispatch) => {\r\n    dispatch({ type: LOAD_USER })\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                authorization: localStorage.getItem(\"token\")\r\n            }\r\n        }\r\n        let result = await axios.get(\"/api/user/current\", config)\r\n        dispatch({type: CURRENT_USER, payload: result.data})\r\n    } catch (error) {\r\n        dispatch({ type: FAIL_USER, payload: error.response.data.errors})\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    dispatch({ type: LOGOUT_USER })\r\n}\r\n\r\n// Action to fetch user's posts\r\nexport const fetchUserPosts = () => async (dispatch, getState) => {\r\n    const userId = getState().userReducer.user.id; // Get the user's ID from Redux\r\n    try {\r\n      const response = await axios.get(`/api/user/posts/${userId}`);\r\n      const userPosts = response.data.userPosts;\r\n      dispatch({ type: FETCH_USER_POSTS_SUCCE, payload: userPosts });\r\n    } catch (error) {\r\n      dispatch({ type: FETCH_USER_POSTS_FAILURE, payload: error.message });\r\n    }\r\n  };\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}